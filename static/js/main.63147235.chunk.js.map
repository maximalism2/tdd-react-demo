{"version":3,"sources":["lib/makeCancelable.js","lib/noop.js","components/Post.comopnents.js","components/Comments.js","components/Post.js","App.js","lib/fakedData.js","mocks/browserHandlers.js","mocks/browser.js","index.js"],"names":["CanceledPromiseError","Error","noop","PostContainer","styled","article","Author","avatar","fullName","AuthorWrapper","AuthorAvatar","src","AuthorName","div","img","span","PostHeader","header","PostDate","Comments","comments","useState","commentsTruncated","setCommentsTruncated","length","shouldTruncateComments","commentsToShow","slice","CommentsWrapper","map","comment","Comment","key","id","ShowMoreButton","count","onClick","author","content","CommentWrapper","type","section","Post","timestamp","format","Date","App","posts","setPosts","useEffect","postsFetcher","promise","wasCanceled","canceledError","Promise","resolve","reject","then","val","error","cancel","makeCancelable","fetch","response","json","catch","post","fakeAuthor","faker","image","name","findName","undefined","fakeComments","min","max","amount","random","number","Array","fill","uuid","lorem","lines","browserHandlers","rest","get","req","res","ctx","date","recent","fakePosts","worker","setupWorker","a","start","serviceWorker","url","process","options","scope","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63147235.chunk.js","sourcesContent":["export const makeCancelable = (promise) => {\n  let wasCanceled = false\n  const canceledError = new CanceledPromiseError()\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      (val) => (wasCanceled ? reject(canceledError) : resolve(val)),\n      (error) => (wasCanceled ? reject(canceledError) : reject(error))\n    )\n  })\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      wasCanceled = true\n    },\n  }\n}\n\nexport class CanceledPromiseError extends Error {\n  constructor() {\n    super(\"Promise has been canceled\")\n  }\n}\n","export function noop() {}\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nexport const PostContainer = styled.article`\n  border: 1px solid #ddd;\n  border-radius: 0.2rem;\n  max-width: 35rem;\n  margin: 0 auto 2rem;\n  padding: 1rem;\n`\n\nexport function Author({ avatar, fullName }) {\n  return (\n    <AuthorWrapper>\n      <AuthorAvatar src={avatar} />\n      <AuthorName>{fullName}</AuthorName>\n    </AuthorWrapper>\n  )\n}\n\nconst AuthorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst AuthorAvatar = styled.img`\n  width: 2em;\n  height: 2em;\n  border-radius: 0.2rem;\n  margin-right: 0.5rem;\n`\nconst AuthorName = styled.span`\n  font-weight: bold;\n`\nexport const PostHeader = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const PostDate = styled.span`\n  color: #666;\n  font-size: 0.8rem;\n`\n","import React, { useState } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Author } from \"./Post.comopnents\"\n\nconst TRUNCATE_THRESHOLD = 2\n\nexport function Comments({ comments }) {\n  const [commentsTruncated, setCommentsTruncated] = useState(true)\n\n  if (comments.length === 0) {\n    return null\n  }\n\n  const shouldTruncateComments =\n    comments.length > TRUNCATE_THRESHOLD && commentsTruncated\n  const commentsToShow = shouldTruncateComments\n    ? comments.slice(0, 1)\n    : comments\n\n  return (\n    <CommentsWrapper>\n      {commentsToShow.map((comment) => (\n        <Comment key={comment.id} {...comment} />\n      ))}\n      {shouldTruncateComments && commentsTruncated && (\n        <ShowMoreButton\n          count={comments.length - 1}\n          onClick={() => setCommentsTruncated(false)}\n        />\n      )}\n    </CommentsWrapper>\n  )\n}\n\nfunction Comment({ author, content }) {\n  return (\n    <CommentWrapper>\n      <Author {...author} />\n      <p>{content}</p>\n    </CommentWrapper>\n  )\n}\n\nfunction ShowMoreButton({ count, onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Show {count} more\n    </button>\n  )\n}\n\nconst CommentsWrapper = styled.section`\n  border-top: 1px solid #ddd;\n  font-size: 0.85rem;\n`\n\nconst CommentWrapper = styled.article`\n  padding: 1em;\n`\n","import React from \"react\"\nimport { format } from \"date-fns\"\nimport { Author, PostContainer, PostDate, PostHeader } from \"./Post.comopnents\"\nimport { Comments } from \"./Comments\"\n\nexport function Post({ author, content, timestamp, comments }) {\n  return (\n    <PostContainer>\n      <PostHeader>\n        <Author {...author} />\n\n        <PostDate>{format(new Date(timestamp), \"yyyy-MM-dd\")}</PostDate>\n      </PostHeader>\n\n      <p>{content}</p>\n\n      <Comments comments={comments} />\n    </PostContainer>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { makeCancelable } from \"./lib/makeCancelable\"\nimport { noop } from \"./lib/noop\"\nimport { Post } from \"./components/Post\"\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    const postsFetcher = makeCancelable(fetch(\"/posts\"))\n\n    postsFetcher.promise\n      .then((response) => response.json())\n      .then(setPosts)\n      .catch(noop)\n\n    return () => postsFetcher.cancel()\n  }, [])\n\n  return (\n    <div>\n      {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n      <h1>TDD in React is ðŸ”¥</h1>\n\n      {posts.map((post) => (\n        <Post key={post.id} {...post} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n","import faker from \"faker/locale/en\"\n\nexport function fakeAuthor() {\n  return {\n    avatar: faker.image.avatar(),\n    fullName: faker.name.findName(\"\", \"\", undefined),\n  }\n}\n\nexport function fakeComments(min, max) {\n  const amount = faker.random.number({ min, max })\n  return new Array(amount).fill(null).map(() => ({\n    id: faker.random.uuid(),\n    author: fakeAuthor(),\n    content: faker.lorem.lines(),\n  }))\n}\n\nexport function fakePosts(amount = 3) {\n  return new Array(amount).fill(null).map(() => ({\n    id: faker.random.uuid(),\n    content: faker.lorem.lines(),\n    author: fakeAuthor(),\n    timestamp: faker.date.recent(),\n    comments: fakeComments(0, 5),\n  }))\n}\n","import { rest } from \"msw\"\nimport { fakePosts } from \"../lib/fakedData\"\n\nexport const browserHandlers = [\n  rest.get(\"/posts\", (req, res, ctx) => res(ctx.json(fakePosts(5)))),\n]\n","import { setupWorker } from \"msw\"\nimport { browserHandlers } from \"./browserHandlers\"\n\nexport const worker = setupWorker(...browserHandlers)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nimport { worker } from \"./mocks/browser\"\n;(async () => {\n  await worker.start({\n    serviceWorker: {\n      url: process.env.PUBLIC_URL + \"/mockServiceWorker.js\",\n      options: {\n        scope: process.env.PUBLIC_URL,\n      },\n    },\n  })\n\n  console.log(process.env.PUBLIC_URL)\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n})()\n"],"sourceRoot":""}