{"version":3,"sources":["lib/makeCancelable.js","lib/noop.js","components/Post.comopnents.js","components/Post.js","App.js","lib/fakedData.js","mocks/browserHandlers.js","mocks/browser.js","index.js"],"names":["CanceledPromiseError","Error","noop","PostContainer","styled","article","Author","avatar","fullName","AuthorWrapper","AuthorAvatar","src","AuthorName","div","img","span","PostHeader","header","PostDate","Post","author","content","timestamp","format","Date","App","useState","posts","setPosts","useEffect","postsFetcher","promise","wasCanceled","canceledError","Promise","resolve","reject","then","val","error","cancel","makeCancelable","fetch","response","json","catch","map","post","key","id","fakeAuthor","faker","image","name","findName","undefined","browserHandlers","rest","get","req","res","ctx","amount","Array","fill","random","uuid","lorem","lines","date","recent","fakePosts","worker","setupWorker","a","start","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAmBaA,EAAb,kDACE,aAAe,uCACP,6BAFV,sBAA0CC,QCnBnC,SAASC,K,8zBCGT,IAAMC,EAAgBC,IAAOC,QAAV,KAQnB,SAASC,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC/B,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAcC,IAAKJ,IACnB,kBAACK,EAAD,KAAaJ,IAKnB,IAAMC,EAAgBL,IAAOS,IAAV,KAIbH,EAAeN,IAAOU,IAAV,KAMZF,EAAaR,IAAOW,KAAV,KAGHC,EAAaZ,IAAOa,OAAV,KAKVC,EAAWd,IAAOW,KAAV,KClCd,SAASI,EAAT,GAA+C,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACtC,OACE,kBAACnB,EAAD,KACE,kBAACa,EAAD,KACE,kBAACV,EAAWc,GAEZ,kBAACF,EAAD,KAAWK,YAAO,IAAIC,KAAKF,GAAY,gBAGzC,2BAAID,ICkBKI,MA1Bf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KAcb,OAXAC,qBAAU,WACR,IAAMC,EJToB,SAACC,GAC7B,IAAIC,GAAc,EACZC,EAAgB,IAAIjC,EAS1B,MAAO,CACL+B,QARqB,IAAIG,SAAQ,SAACC,EAASC,GAC3CL,EAAQM,MACN,SAACC,GAAD,OAAUN,EAAcI,EAAOH,GAAiBE,EAAQG,MACxD,SAACC,GAAD,OAA0BH,EAAdJ,EAAqBC,EAAwBM,SAM3DC,OAFK,WAGHR,GAAc,IILKS,CAAeC,MAAM,WAO1C,OALAZ,EAAaC,QACVM,MAAK,SAACM,GAAD,OAAcA,EAASC,UAC5BP,KAAKT,GACLiB,MAAM3C,GAEF,kBAAM4B,EAAaU,YACzB,IAGD,6BAEE,4DAECb,EAAMmB,KAAI,SAACC,GAAD,OACT,kBAAC5B,EAAD,eAAM6B,IAAKD,EAAKE,IAAQF,S,gDCvBzB,SAASG,IACd,MAAO,CACL3C,OAAQ4C,IAAMC,MAAM7C,SACpBC,SAAU2C,IAAME,KAAKC,SAAS,GAAI,QAAIC,ICFnC,IAAMC,EAAkB,CAC7BC,IAAKC,IAAI,UAAU,SAACC,EAAKC,EAAKC,GAAX,OAAmBD,EAAIC,EAAIjB,KDKzC,WAAgC,IAAbkB,EAAY,uDAAH,EACjC,OAAO,IAAIC,MAAMD,GAAQE,KAAK,MAAMlB,KAAI,iBAAO,CAC7CG,GAAIE,IAAMc,OAAOC,OACjB7C,QAAS8B,IAAMgB,MAAMC,QACrBhD,OAAQ8B,IACR5B,UAAW6B,IAAMkB,KAAKC,aCV2BC,CAAU,SCDlDC,EAASC,IAAW,WAAX,cAAejB,ICGpC,sBAAC,sBAAAkB,EAAA,sEACMF,EAAOG,QADb,OAGAC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAP1B,0CAAD,I","file":"static/js/main.11db3e6f.chunk.js","sourcesContent":["export const makeCancelable = (promise) => {\n  let wasCanceled = false\n  const canceledError = new CanceledPromiseError()\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      (val) => (wasCanceled ? reject(canceledError) : resolve(val)),\n      (error) => (wasCanceled ? reject(canceledError) : reject(error))\n    )\n  })\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      wasCanceled = true\n    },\n  }\n}\n\nexport class CanceledPromiseError extends Error {\n  constructor() {\n    super(\"Promise has been canceled\")\n  }\n}\n","export function noop() {}\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nexport const PostContainer = styled.article`\n  border: 1px solid #ddd;\n  border-radius: 0.2rem;\n  max-width: 35rem;\n  margin: 0 auto 2rem;\n  padding: 1rem;\n`\n\nexport function Author({ avatar, fullName }) {\n  return (\n    <AuthorWrapper>\n      <AuthorAvatar src={avatar} />\n      <AuthorName>{fullName}</AuthorName>\n    </AuthorWrapper>\n  )\n}\n\nconst AuthorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst AuthorAvatar = styled.img`\n  width: 3rem;\n  height: 3rem;\n  border-radius: 0.2rem;\n  margin-right: 1rem;\n`\nconst AuthorName = styled.span`\n  font-weight: bold;\n`\nexport const PostHeader = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const PostDate = styled.span`\n  color: #666;\n  font-size: 0.8rem;\n`\n","import React from \"react\"\nimport { format } from \"date-fns\"\nimport { Author, PostContainer, PostDate, PostHeader } from \"./Post.comopnents\"\n\nexport function Post({ author, content, timestamp }) {\n  return (\n    <PostContainer>\n      <PostHeader>\n        <Author {...author} />\n\n        <PostDate>{format(new Date(timestamp), \"yyyy-MM-dd\")}</PostDate>\n      </PostHeader>\n\n      <p>{content}</p>\n    </PostContainer>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { makeCancelable } from \"./lib/makeCancelable\"\nimport { noop } from \"./lib/noop\"\nimport { Post } from \"./components/Post\"\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    const postsFetcher = makeCancelable(fetch(\"/posts\"))\n\n    postsFetcher.promise\n      .then((response) => response.json())\n      .then(setPosts)\n      .catch(noop)\n\n    return () => postsFetcher.cancel()\n  }, [])\n\n  return (\n    <div>\n      {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n      <h1>TDD in React is ðŸ”¥</h1>\n\n      {posts.map((post) => (\n        <Post key={post.id} {...post} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n","import faker from \"faker/locale/en\"\n\nexport function fakeAuthor() {\n  return {\n    avatar: faker.image.avatar(),\n    fullName: faker.name.findName(\"\", \"\", undefined),\n  }\n}\n\nexport function fakePosts(amount = 3) {\n  return new Array(amount).fill(null).map(() => ({\n    id: faker.random.uuid(),\n    content: faker.lorem.lines(),\n    author: fakeAuthor(),\n    timestamp: faker.date.recent(),\n  }))\n}\n","import { rest } from \"msw\"\nimport { fakePosts } from \"../lib/fakedData\"\n\nexport const browserHandlers = [\n  rest.get(\"/posts\", (req, res, ctx) => res(ctx.json(fakePosts(5)))),\n]\n","import { setupWorker } from \"msw\"\nimport { browserHandlers } from \"./browserHandlers\"\n\nexport const worker = setupWorker(...browserHandlers)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nimport { worker } from \"./mocks/browser\"\n;(async () => {\n  await worker.start()\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n})()\n"],"sourceRoot":""}