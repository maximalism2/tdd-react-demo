{"version":3,"sources":["lib/makeCancelable.js","lib/noop.js","components/Post.comopnents.js","components/Comments.js","components/Post.js","App.js","lib/fakedData.js","mocks/browserHandlers.js","mocks/browser.js","index.js"],"names":["CanceledPromiseError","Error","noop","PostContainer","styled","article","Author","avatar","fullName","AuthorWrapper","AuthorAvatar","src","AuthorName","div","img","span","PostHeader","header","PostDate","Comments","postId","totalComments","comments","useState","loadedComments","setLoadedComments","length","a","fetch","response","json","allCommentsLoaded","commentsToShow","CommentsWrapper","map","comment","Comment","key","id","ShowMoreButton","count","onClick","author","content","CommentWrapper","type","section","Post","timestamp","format","Date","App","posts","setPosts","useEffect","postsFetcher","promise","wasCanceled","canceledError","Promise","resolve","reject","then","val","error","cancel","makeCancelable","catch","post","fakeAuthor","faker","image","name","findName","undefined","fakeComments","min","max","amount","random","number","Array","fill","uuid","lorem","lines","date","recent","fakePosts","postsWithoutComments","slice","browserHandlers","rest","get","req","res","ctx","find","p","resolveComments","params","worker","setupWorker","start","serviceWorker","url","process","options","scope","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9009910a.chunk.js","sourcesContent":["export const makeCancelable = (promise) => {\n  let wasCanceled = false\n  const canceledError = new CanceledPromiseError()\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      (val) => (wasCanceled ? reject(canceledError) : resolve(val)),\n      (error) => (wasCanceled ? reject(canceledError) : reject(error))\n    )\n  })\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      wasCanceled = true\n    },\n  }\n}\n\nexport class CanceledPromiseError extends Error {\n  constructor() {\n    super(\"Promise has been canceled\")\n  }\n}\n","export function noop() {}\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nexport const PostContainer = styled.article`\n  border: 1px solid #ddd;\n  border-radius: 0.2rem;\n  max-width: 35rem;\n  margin: 0 auto 2rem;\n  padding: 1rem;\n`\n\nexport function Author({ avatar, fullName }) {\n  return (\n    <AuthorWrapper>\n      <AuthorAvatar src={avatar} />\n      <AuthorName>{fullName}</AuthorName>\n    </AuthorWrapper>\n  )\n}\n\nconst AuthorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst AuthorAvatar = styled.img`\n  width: 2em;\n  height: 2em;\n  border-radius: 0.2rem;\n  margin-right: 0.5rem;\n`\nconst AuthorName = styled.span`\n  font-weight: bold;\n`\nexport const PostHeader = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const PostDate = styled.span`\n  color: #666;\n  font-size: 0.8rem;\n`\n","import React, { useState } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Author } from \"./Post.comopnents\"\n\nconst TRUNCATE_THRESHOLD = 2\n\nexport function Comments({ postId, totalComments, comments }) {\n  const [loadedComments, setLoadedComments] = useState([])\n\n  if (comments.length === 0) {\n    return null\n  }\n\n  async function loadAllComments() {\n    const response = await fetch(`/posts/${postId}/comments`)\n    setLoadedComments(await response.json())\n  }\n\n  const allCommentsLoaded = loadedComments.length > 0\n  const commentsToShow = allCommentsLoaded ? loadedComments : comments\n\n  return (\n    <CommentsWrapper>\n      {commentsToShow.map((comment) => (\n        <Comment key={comment.id} {...comment} />\n      ))}\n      {!allCommentsLoaded && totalComments > TRUNCATE_THRESHOLD && (\n        <ShowMoreButton count={totalComments - 1} onClick={loadAllComments} />\n      )}\n    </CommentsWrapper>\n  )\n}\n\nfunction Comment({ author, content }) {\n  return (\n    <CommentWrapper>\n      <Author {...author} />\n      <p>{content}</p>\n    </CommentWrapper>\n  )\n}\n\nfunction ShowMoreButton({ count, onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Show {count} more\n    </button>\n  )\n}\n\nconst CommentsWrapper = styled.section`\n  border-top: 1px solid #ddd;\n  font-size: 0.85rem;\n`\n\nconst CommentWrapper = styled.article`\n  padding: 1em;\n`\n","import React from \"react\"\nimport { format } from \"date-fns\"\nimport { Author, PostContainer, PostDate, PostHeader } from \"./Post.comopnents\"\nimport { Comments } from \"./Comments\"\n\nexport function Post({\n  id,\n  author,\n  content,\n  timestamp,\n  totalComments,\n  comments,\n}) {\n  return (\n    <PostContainer>\n      <PostHeader>\n        <Author {...author} />\n\n        <PostDate>{format(new Date(timestamp), \"yyyy-MM-dd\")}</PostDate>\n      </PostHeader>\n\n      <p>{content}</p>\n\n      <Comments comments={comments} totalComments={totalComments} postId={id} />\n    </PostContainer>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { makeCancelable } from \"./lib/makeCancelable\"\nimport { noop } from \"./lib/noop\"\nimport { Post } from \"./components/Post\"\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    const postsFetcher = makeCancelable(fetch(\"/posts\"))\n\n    postsFetcher.promise\n      .then((response) => response.json())\n      .then(setPosts)\n      .catch(noop)\n\n    return () => postsFetcher.cancel()\n  }, [])\n\n  return (\n    <div>\n      {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n      <h1>TDD in React is ðŸ”¥</h1>\n\n      {posts.map((post) => (\n        <Post key={post.id} {...post} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n","import faker from \"faker/locale/en\"\n\nexport function fakeAuthor() {\n  return {\n    avatar: faker.image.avatar(),\n    fullName: faker.name.findName(\"\", \"\", undefined),\n  }\n}\n\nexport function fakeComments(min, max) {\n  const amount = faker.random.number({ min, max })\n  return new Array(amount).fill(null).map(() => ({\n    id: faker.random.uuid(),\n    author: fakeAuthor(),\n    content: faker.lorem.lines(),\n  }))\n}\n\nexport function fakePosts(amount = 3) {\n  return new Array(amount).fill(null).map(() => ({\n    id: faker.random.uuid(),\n    content: faker.lorem.lines(),\n    author: fakeAuthor(),\n    timestamp: faker.date.recent(),\n    comments: fakeComments(0, 5),\n  }))\n}\n","import { rest } from \"msw\"\nimport { fakePosts } from \"../lib/fakedData\"\n\nconst posts = fakePosts(5)\n\nconst postsWithoutComments = posts.map((post) => ({\n  ...post,\n  totalComments: post.comments.length,\n  comments: post.comments.slice(0, 1),\n}))\n\nfunction resolveComments(postId) {\n  const post = posts.find((p) => p.id === postId)\n\n  if (!post) {\n    return null\n  }\n\n  return post.comments\n}\n\nexport const browserHandlers = [\n  rest.get(\"/posts\", (req, res, ctx) => res(ctx.json(postsWithoutComments))),\n  rest.get(\"/posts/:postId/comments\", (req, res, ctx) => {\n    const { postId } = req.params\n    const comments = resolveComments(postId)\n    return res(ctx.json(comments))\n  }),\n]\n","import { setupWorker } from \"msw\"\nimport { browserHandlers } from \"./browserHandlers\"\n\nexport const worker = setupWorker(...browserHandlers)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nimport { worker } from \"./mocks/browser\"\n;(async () => {\n  await worker.start({\n    serviceWorker: {\n      url: process.env.PUBLIC_URL + \"/mockServiceWorker.js\",\n      options: {\n        scope: process.env.PUBLIC_URL + \"/\",\n      },\n    },\n  })\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n})()\n"],"sourceRoot":""}